theme(legend.position = 'bottom')
ggsave('plots/scores_forecast_date_relative.pdf', plot=p1, height=7, width=10)
ggsave('plots/scores_forecast_date_relative.png', plot=p1, height=7, width=10, units = 'in', dpi=300)
p2 =
ggplot(score_by_age_long_rel) +
geom_point(aes(y=age_index, x=score, color=model))+
geom_path(aes(y=age_index, x=score, color=model), linetype='dashed')+
facet_grid(periods~score_type, scale='free_x', labeller = labeller(score_type=setNames(c('Interval Score', "Absolute error \nof the mean",  'Bias'),c('interval_score_rel',  'aem_rel', 'bias'))))+
scale_color_discrete(name='', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_y_continuous(name='age group', breaks = 1:7, labels = age_groups, trans='reverse')+
theme_minimal_vgrid()+
theme(
legend.position = 'bottom'
)
ggsave('plots/scores_age_period_relative.pdf', plot=p2, height=15, width=10)
ggsave('plots/scores_age_period_relative.png', plot=p2, height=15, width=10, units = 'in', dpi=300)
score_by_period = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", "periods"))
score_overall = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model"))
score_age = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", 'age_group'))
write.csv(score_by_period, 'outputs/score_by_period.csv')
write.csv(score_overall, 'outputs/score_overall.csv')
list(score_overall=score_overall, score_by_period=score_by_period, score_by_age=score_age)
}
summary_scores = score_forecasts(summary_preds[date<lubridate::ymd(20211201)], pandemic_periods)
plot_trajectories_one_ax = function(summary_preds, d){
ggplot()+
#geom_rect(data=summary_preds[name == 'infections' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`), fill='blue', alpha=0.3)+
geom_point(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(x=date, y=value), size=0.01)+
geom_point(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(x=date, y=value), size=0.01)+
#geom_rect(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`), fill='limegreen', alpha=0.5)+
geom_rect(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`, fill=as.character(run)), alpha=0.2)+
#geom_point(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(x=date, y=`50%`), color='green', size=0.01)+
geom_point(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(x=date, y=`50%`, color=as.character(run)), size=0.01)+
facet_wrap(~age_index, labeller =labeller(age_index=age_labs), ncol=2)+
scale_x_date(name='')+
scale_y_continuous(name='Infections')+
scale_color_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data',  'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_fill_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
theme_minimal_hgrid()+
theme(legend.position = 'bottom')
#ggsave('plots/trajectories.pdf', width=10, height=7)
#ggsave('plots/trajectories.png', width=10, height=7, units='in', dpi=300)
}
dates
sort(dates)
sr_dates
dates = head(tail(sr_dates$min_date, -5), -10)
dates = sort(head(tail(sr_dates$min_date, -5), -10))
dates
d = lapply(dates, lubridate::ymd)
unlist(d)
plot_trajectories_one_ax(summary_preds, d)
library(data.table)
library(ggplot2)
library(tidyverse)
library(future.apply)
library(future.callr)
library(future)
library(cmdstanr)
source('R/fit_model.R')
source('R/plotting.R')
library(patchwork)
age_groups =  c('2-10', '11-15', '16-24', '25-34', '35-49', '50-69', '70+' )
age_lookup = setNames(object=1:7, nm = age_groups)
age_labs = age_groups
names(age_labs) = 1:7
# load samples of infections and abprev from inc2prev
#samples = readRDS('../../../inc2prev/outputs/samples_combined_age_ab_A.rds')
samples = readRDS('../samples_age_ab.rds')
samples = data.table(samples)
estimates_ = readRDS('../../../inc2prev/outputs/estimates_combined_age_ab_A.rds')
ab_samples = data.table(samples)[name == 'dab']
estimates = read.csv(file = '../estimates_age_ab.csv')
population = data.table(unique(estimates[,c('variable', 'population')]))
population = population[order(match(unique(variable), c("2-10", "11-15", "16-24", "25-34", "35-49", "50-69", "70+"))),]
population[, props := population/sum(population)]
estimates = data.table(estimates)
estimates[, age_group_no := age_lookup[variable]]
inf_estimates = data.table(estimates)[name == 'infections']
inf_estimates[, date := as.Date(date)]
inf_estimates_mu = inf_estimates[, c('mean', 'variable', 'date')]
inf_estimates[, mean_no := mean * population]
inf_estimates[, sd_no := sd * population]
inf_traj = ggplot(inf_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean_no), size=0.3, stroke=0, color='red')+
facet_wrap(~age_group_no, nrow=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Infections')+
scale_x_date(breaks = c(), name='')+
theme_minimal_hgrid()+
ggtitle('A')
inf_matrix_mean  = dcast(inf_estimates, value.var = 'mean_no', date ~ variable)
inf_matrix_sd = dcast(inf_estimates, value.var = 'sd_no', date ~ variable)
ab_estimates = data.table(estimates)[name == 'gen_dab']
ab_estimates[, date := min(inf_estimates$date) + (t_index-1)]
ab_estimates[, mean_no := mean * population]
ab_estimates[, sd_no := sd * population]
ab_estimates_mu = ab_estimates[, c('mean_no', 'variable', 'date')]
anb_matrix_mean  = dcast(ab_estimates, value.var = 'mean', date ~ variable)
anb_matrix_sd = dcast(ab_estimates, value.var = 'sd', date ~ variable)
anb_traj = ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean), size=0.3, stroke=0, color='DodgerBlue')+
facet_wrap(~age_group_no, nrow=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
input_plot = inf_traj/anb_traj
ggsave('plots/inputs.pdf', input_plot, width=10, height=5)
ggsave('plots/inputs.png', input_plot, width=10, height=5, units = 'in', dpi=300)
# load mean contact matrices from contactmatrixcode
cms = readRDS('cms.rds')
sr_dates = readRDS('sr_dates.rds')
population = readRDS('population.rds')
ggplot(sr_dates) +
geom_rect(aes(xmin=min_date, xmax=max_date, ymax=survey_round+0.4, ymin=survey_round-0.4, fill=survey_round))+
scale_fill_viridis()+
scale_y_continuous(trans='reverse', name='Survey Round')+
theme_minimal_vgrid()+
theme(legend.position = 'none')
ggsave('plots/survey_rounds.png', width=10, height=3)
#anb_matrix_mean = dcast(samples[name=='dab', c('sample', 'variable', 'value', 'date')],
#                        date ~ variable,
#                        value.var = 'value',
#                        fun.aggregate = mean)
#anb_matrix_sd = dcast(samples[name=='dab', c('sample', 'variable', 'value', 'date')],
#                      date ~ variable,
#                      value.var = 'value',
#                      fun.aggregate = sd)
#
# set the correct order for age columns in matrices
age_groups =  c('2-10', '11-15', '16-24', '25-34', '35-49', '50-69', '70+' )
colorder= c('date', age_groups )
setcolorder(inf_matrix_mean, colorder)
setcolorder(inf_matrix_sd, colorder)
setcolorder(anb_matrix_mean, colorder)
setcolorder(anb_matrix_sd, colorder)
actualest_inc_long = melt(inf_matrix_mean[,-'sr'], id.vars = 'date', measure.vars = colnames(inf_matrix_mean[,-c('date', 'sr')]))
actualest_inc_long[, age_group := variable]
ggplot(actualest_inc_long)+
geom_point(aes(x=date, y = value, color=variable))
age_mods = list(cmdstan_model('stan/age_specific_transmission-fit_contacts_symmat.stan'), cmdstan_model('stan/age_specific_transmission-fit_contacts_symmat_fitmeans.stan'), cmdstan_model('stan/age_specific_transmission-fit_contacts_symmat_fitmatmeans.stan'), cmdstan_model('stan/age_specific_transmission-fit_contacts_symmat_fitnothing.stan'))
dates = sort(head(tail(sr_dates$min_date, -5), -10))
period = 30
plan(callr, workers = future::availableCores())
all_est = list()
for(r in 1:4){
est <- future_lapply(
dates, fit_NGM_model_for_date_range,
age_mod = age_mods[[r]],
period = period,
inf_matrix_mean = inf_matrix_mean,
inf_matrix_sd = inf_matrix_sd,
anb_matrix_mean = anb_matrix_mean,
anb_matrix_sd = anb_matrix_sd,
cms = cms,
runindex = r,
quantiles=c(0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95),
future.seed=TRUE
)
all_est = append(all_est, est)
}
summary_pars = data.table()
for(i in 1:length(all_est)){
summary_pars = rbind(summary_pars, data.table(all_est[[i]]$summary_pars))
}
summary_preds = data.table()
for(i in 1:length(all_est)){
summary_preds = rbind(summary_preds, data.table(all_est[[i]]$summary_preds))
}
summary_preds[name=='forecast_gens', date := as.Date(forecast_date) + time_index]
summary_preds[name=='next_gens',  date := as.Date(forecast_date) - period + time_index]
summary_preds[, age_group := age_groups[age_index]]
summary_preds = merge(summary_preds, actualest_inc_long, by.x = c('date', 'age_group'), by.y = c('date', 'age_group'), all.x = T, all.y = F )
baselines = get_baselines(inf_estimates, summary_preds)
#baselines[, variable := age_group]
#baselines [, value := NA]
summary_preds = rbind(summary_preds, baselines)
summary_conts = data.table()
for(i in 1:length(all_est)){
summary_preds = rbind(summary_preds, data.table(all_est[[i]]$summary_conts))
}
d = lapply(dates, lubridate::ymd)
unlist(d)
dates
plot_trajectories_one_ax(summary_preds, d)
plot_trajectories_one_ax
score_forecasts = function(summary_preds, pandemic_periods) {
preds_long = melt(summary_preds[name=='forecast_gens'],
id.vars = c('date', 'age_group', 'name', 'age_index', 'time_index', 'age_index', 'forecast_date', 'run', 'value'),
measure.vars = c('5%',  '10%', '25%',     '50%',   '75%', '90%',     '95%'), value.name = 'prediction', variable.name = 'quantile_chr')
preds_long[, quantile := as.numeric(sub("%", "", quantile_chr, fixed=TRUE))/100]
preds_long[, true_value := value]
preds_long[, value_date := forecast_date]
preds_long[, value_type := name]
preds_long[, horizon := as.numeric(date - forecast_date)]
preds_long[, model := run]
preds_to_score = preds_long[,c('value_date', 'value_type', 'age_index', 'age_group', 'true_value', 'model', 'quantile', 'prediction', 'horizon')]
preds_to_score[, periods:=cut(preds_to_score$value_date,
breaks = pandemic_periods$date_breaks,
labels = head(pandemic_periods$periods,-1))]
score_by_age = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", "age_index", "periods"))
score_by_fd = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", "value_date"))
score_by_fd_long = melt(score_by_fd, id.vars = c('model', 'value_date'), measure.vars = c('interval_score', 'bias', 'aem'), value.name = 'score', variable.name = 'score_type')
score_by_age_long = melt(score_by_age, id.vars = c('model', 'age_index', 'periods'), measure.vars = c('interval_score', 'bias', 'aem'), value.name = 'score', variable.name = 'score_type')
p1 =
ggplot(score_by_fd_long) +
geom_point(aes(x=value_date, y=score, color=model))+
geom_line(aes(x=value_date, y=score, color=model), linetype='dashed')+
facet_wrap(~score_type, ncol=1, scale='free_y', labeller = labeller(score_type=setNames(c('Interval Score',  'Bias', "Absolute error of the mean"),c('interval_score', 'bias', 'aem'))))+
scale_color_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_x_date(name='')+
theme_minimal_hgrid()
ggsave('plots/scores_forecast_date.pdf', plot=p1, height=10, width=15)
ggsave('plots/scores_forecast_date.png', plot=p1, height=10, width=15, units = 'in', dpi=300)
p2 =
ggplot(score_by_age_long) +
geom_point(aes(x=age_index, y=score, color=model))+
geom_line(aes(x=age_index, y=score, color=model), linetype='dashed')+
facet_grid(score_type~periods, scale='free_y', labeller = labeller(score_type=setNames(c('Interval Score',  'Bias', "Absolute error of the mean"),c('interval_score', 'bias', 'aem'))))+
scale_color_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_x_continuous(name='age group', breaks = 1:7, labels = age_groups, )+
theme_minimal_hgrid()+
theme(
axis.text.x=element_text(angle=90)
)
ggsave('plots/scores_age_period.pdf', plot=p2, height=7, width=22)
ggsave('plots/scores_age_period.png', plot=p2, height=7, width=22, units = 'in', dpi=300)
score_by_age_rel = merge(score_by_age, score_by_age[model=='baseline_last_diff', ], by = c('age_index','periods'), suffixes = c('', '_baseline'))
score_by_age_rel[,
c(
'interval_score_rel',
'bias_rel',
'aem_rel'
)
:=
list(
interval_score/interval_score_baseline,
bias/bias_baseline,
aem/aem_baseline
)
]
score_by_fd_rel = merge(score_by_fd, score_by_fd[model=='baseline_last_diff', ], by = c('value_date'), suffixes = c('', '_baseline'))
score_by_fd_rel[,
c(
'interval_score_rel',
'bias_rel',
'aem_rel'
)
:=
list(
interval_score/interval_score_baseline,
bias/bias_baseline,
aem/aem_baseline
)
]
score_by_fd_long_rel = melt(score_by_fd_rel, id.vars = c('model', 'value_date'), measure.vars = c('interval_score_rel', 'aem_rel', 'bias'), value.name = 'score', variable.name = 'score_type')
score_by_age_long_rel = melt(score_by_age_rel, id.vars = c('model', 'age_index', 'periods'), measure.vars = c('bias', 'aem_rel', 'interval_score_rel' ), value.name = 'score', variable.name = 'score_type')
p1 =
ggplot(score_by_fd_long_rel) +
geom_point(aes(x=value_date, y=score, color=model))+
geom_line(aes(x=value_date, y=score, color=model), linetype='dashed')+
facet_wrap(~score_type, ncol=1, scale='free_y', labeller = labeller(score_type=setNames(c('Interval Score', "Absolute error of the mean",  'Bias'),c('interval_score_rel', 'aem_rel', 'bias'))))+
scale_color_discrete(name='', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_x_date(name='')+
theme_minimal_hgrid()+
theme(legend.position = 'bottom')
ggsave('plots/scores_forecast_date_relative.pdf', plot=p1, height=7, width=10)
ggsave('plots/scores_forecast_date_relative.png', plot=p1, height=7, width=10, units = 'in', dpi=300)
p2 =
ggplot(score_by_age_long_rel) +
geom_point(aes(y=age_index, x=score, color=model))+
geom_path(aes(y=age_index, x=score, color=model), linetype='dashed')+
facet_grid(periods~score_type, scale='free_x', labeller = labeller(score_type=setNames(c('Interval Score', "Absolute error \nof the mean",  'Bias'),c('interval_score_rel',  'aem_rel', 'bias'))))+
scale_color_discrete(name='', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_y_continuous(name='age group', breaks = 1:7, labels = age_groups, trans='reverse')+
theme_minimal_vgrid()+
theme(
legend.position = 'bottom'
)
ggsave('plots/scores_age_period_relative.pdf', plot=p2, height=15, width=10)
ggsave('plots/scores_age_period_relative.png', plot=p2, height=15, width=10, units = 'in', dpi=300)
score_by_period = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", "periods"))
score_overall = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model"))
score_age = scoringutils::eval_forecasts(preds_to_score,
summarise_by = c("model", 'age_group'))
write.csv(score_by_period, 'outputs/score_by_period.csv')
write.csv(score_overall, 'outputs/score_overall.csv')
list(score_overall=score_overall, score_by_period=score_by_period, score_by_age=score_age)
}
summary_scores = score_forecasts(summary_preds[date<lubridate::ymd(20211201)], pandemic_periods)
st1 = melt(summary_scores[[2]], id.vars = c('model', 'periods'), measure.vars = c('interval_score', 'aem', 'bias'), variable.name = 'score_type', value.name = 'score')
overall_table = dcast(st1, formula = periods + score_type ~ model, value.var = 'score')
overall_table
st2 = melt(summary_scores[[3]], id.vars = c('model', 'age_group'), measure.vars = c('interval_score', 'aem', 'bias'), variable.name = 'score_type', value.name = 'score')
age_table = dcast(st2, formula = age_group + score_type ~ model, value.var = 'score')
write.csv(overall_table, file = 'outputs/overall_results.csv')
write.csv(age_table, file = 'outputs/age_results.csv')
summary_scores[[1]]
d = d[10:15]
d
ggplot()+
#geom_rect(data=summary_preds[name == 'infections' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`), fill='blue', alpha=0.3)+
geom_point(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(x=date, y=value), size=0.01)+
geom_point(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(x=date, y=value), size=0.01)+
#geom_rect(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`), fill='limegreen', alpha=0.5)+
geom_rect(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(xmin=date-0.2, xmax=date+0.2, ymin=`5%`, ymax=`95%`, fill=as.character(run)), alpha=0.2)+
#geom_point(data=summary_preds[name == 'next_gens' & forecast_date %in% d,], aes(x=date, y=`50%`), color='green', size=0.01)+
geom_point(data=summary_preds[name == 'forecast_gens' & forecast_date %in% d,], aes(x=date, y=`50%`, color=as.character(run)), size=0.01)+
facet_wrap(~age_index, labeller =labeller(age_index=age_labs), ncol=2)+
scale_x_date(name='')+
scale_y_continuous(name='Infections')+
scale_color_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data',  'Baseline - linear extrapolation', 'Baseline - last generation value'))+
scale_fill_discrete(name='model', labels=c('Full contact data', 'Age-group means', 'Overall means', 'No contact data', 'Baseline - linear extrapolation', 'Baseline - last generation value'))+
theme_minimal_hgrid()+
theme(legend.position = 'bottom')
ggsave("plots/trajectories_zoomed.pdf", width = 15, height=10)
ggsave("plots/trajectories_zoomed.png", width = 15, height=10,  units = 'in', dpi = 300 )
length(dates)
dates
ggsave("plots/trajectories_zoomed.pdf", width = 10, height=7)
ggsave("plots/trajectories_zoomed.png", width = 10, height=7,  units = 'in', dpi = 300 )
overall_table
length(dates)
vignette(metric-details)
vignette('metric-details')
browseVignettes("scoringutils")
inf_traj
anb_traj
estimates = read.csv(file = '../estimates_age_ab.csv')
population = data.table(unique(estimates[,c('variable', 'population')]))
population = population[order(match(unique(variable), c("2-10", "11-15", "16-24", "25-34", "35-49", "50-69", "70+"))),]
population[, props := population/sum(population)]
estimates = data.table(estimates)
estimates[, age_group_no := age_lookup[variable]]
inf_estimates = data.table(estimates)[name == 'infections']
inf_estimates[, date := as.Date(date)]
inf_estimates_mu = inf_estimates[, c('mean', 'variable', 'date')]
inf_estimates[, mean_no := mean * population]
inf_estimates[, sd_no := sd * population]
inf_traj = ggplot(inf_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean_no), size=0.3, stroke=0, color='red')+
facet_wrap(~age_group_no, nrow=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Infections')+
scale_x_date(breaks = c(), name='')+
theme_minimal_hgrid()+
ggtitle('A')
inf_traj
inf_traj = ggplot(inf_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean_no), size=0.3, stroke=0, color='red')+
facet_wrap(~age_group_no, ncolow=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Infections')+
scale_x_date(breaks = c())+
theme_minimal_hgrid()+
ggtitle('A')
inf_traj = ggplot(inf_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean_no), size=0.3, stroke=0, color='red')+
facet_wrap(~age_group_no, ncol=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Infections')+
scale_x_date(breaks = c())+
theme_minimal_hgrid()+
ggtitle('A')
inf_traj
inf_traj = ggplot(inf_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean_no), size=0.3, stroke=0, color='red')+
facet_wrap(~age_group_no, ncol=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Infections')+
scale_x_date()+
theme_minimal_hgrid()+
ggtitle('A')
inf_traj
ab_estimates = data.table(estimates)[name == 'gen_dab']
ab_estimates[, date := min(inf_estimates$date) + (t_index-1)]
ab_estimates[, mean_no := mean * population]
ab_estimates[, sd_no := sd * population]
ab_estimates_mu = ab_estimates[, c('mean_no', 'variable', 'date')]
anb_matrix_mean  = dcast(ab_estimates, value.var = 'mean', date ~ variable)
anb_matrix_sd = dcast(ab_estimates, value.var = 'sd', date ~ variable)
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean), size=0.3, stroke=0, color='DodgerBlue')+
facet_wrap(~age_group_no, ncol=1, labeller= labeller(age_group_no = age_labs))+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean), size=0.3, stroke=0, color=age_group_no)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ab_estimates
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90))+
geom_point(aes(x=date, y=mean, color=age_group_no), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=age_group))+
geom_point(aes(x=date, y=mean, color=age_group), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ab_estimates
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable))+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle('B')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
theme(axis.text.x = element_text(angle = 45))
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
scale_x_date(date_labels = '%b-%y')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b%Y')+
theme(axis.text.x = element_text(angle = 45))
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')+
theme(axis.text.x = element_text(angle = 45))
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=variable), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=variable), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=as.character(age_group_no)), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=as.character(age_group_no))), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')
ab_estimates[, an := as.character(age_group_no)]
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=an), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=an)), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')
ab_estimates
ab_estimates[, ano := as.character(age_group_no)]
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=ano), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=ano)), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=ano), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=ano), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_x_date(date_labels = '%b %Y')
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=ano), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=ano), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_color_discrete(labels = age_groups)
ggplot(ab_estimates) +
geom_ribbon(aes(x=date, ymin=q10, ymax=q90, fill=ano), alpha=0.1)+
geom_point(aes(x=date, y=mean, color=ano), size=0.3, stroke=0)+
scale_y_continuous(name='Proportion with antibodies')+
theme_minimal_hgrid()+
scale_color_discrete(labels = age_groups)+
scale_fill_discrete(labels = age_groups)+
scale_x_date(date_labels = '%b %Y')
age_groups
